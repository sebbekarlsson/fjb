enum AST_TYPE
{
  AST_CASE
,AST_BOOL
,AST_ARROW_DEFINITION
,AST_CALL
,AST_FUNCTION
,AST_ARRAY
,AST_STRING
,AST_INT
,AST_INT_MIN
,AST_HEX
,AST_FLOAT
,AST_ASSIGNMENT
,AST_DEFINITION
,AST_COLON_ASSIGNMENT
,AST_WHILE
,AST_DO
,AST_FOR
,AST_CONDITION
,AST_TERNARY
,AST_COMPOUND
,AST_UNDEFINED
,AST_IMPORT
,AST_IMPORT_PHONY
,AST_OBJECT
,AST_SCOPE
,AST_NAME
,AST_STATE
,AST_BINOP
,AST_UNOP
,AST_TRY
,AST_INCREMENT
,AST_DECREMENT
,AST_REGEX
,AST_SWITCH
,AST_SIGNATURE
,AST_LABEL
,AST_NOOP
,AST_CLASS
,AST_CLASS_FUNCTION
,AST_TUPLE
,AST_JSX_COMPOUND
,AST_JSX_ELEMENT
,AST_JSX_TEXT
,AST_JSX_TEMPLATE_STRING
,AST_JSX_TEMPLATE_VALUE
,AST_TEMPLATE_STRING
,AST_RAW
};

static const char * AST_TYPE_STR[] = {
  "AST_CASE","AST_BOOL","AST_ARROW_DEFINITION","AST_CALL","AST_FUNCTION","AST_ARRAY","AST_STRING","AST_INT","AST_INT_MIN","AST_HEX","AST_FLOAT","AST_ASSIGNMENT","AST_DEFINITION","AST_COLON_ASSIGNMENT","AST_WHILE","AST_DO","AST_FOR","AST_CONDITION","AST_TERNARY","AST_COMPOUND","AST_UNDEFINED","AST_IMPORT","AST_IMPORT_PHONY","AST_OBJECT","AST_SCOPE","AST_NAME","AST_STATE","AST_BINOP","AST_UNOP","AST_TRY","AST_INCREMENT","AST_DECREMENT","AST_REGEX","AST_SWITCH","AST_SIGNATURE","AST_LABEL","AST_NOOP","AST_CLASS","AST_CLASS_FUNCTION","AST_TUPLE","AST_JSX_COMPOUND","AST_JSX_ELEMENT","AST_JSX_TEXT","AST_JSX_TEMPLATE_STRING","AST_JSX_TEMPLATE_VALUE","AST_TEMPLATE_STRING","AST_RAW"};

